#name: Veracode SCA Scan
#
#on: 
#  push:
#    paths-ignore:
#      - "README.md"
#  schedule:
#    - cron: 15 14 * * 6
#
#jobs:
#  veracode-sca-task:
#    runs-on: ubuntu-latest
#    name: Scan repository for Issues
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Run Veracode SCA
#        env:
#          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
#        uses: Lerer/veracode-sca@v1.0.1 
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          quick: true
#          create-issues: false 
#          fail-on-cvss: 3
#name: Secure with SCA Agent Based
#
## Controls when the workflow will run
#on:
#  # Triggers the workflow on push where package-lock.json modifies or pull request events
#  push:
#    branches: [test*]
#  pull_request:
#  
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
## A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#
## The workflow consist of a single job to quickly scan dependencies
# SCA_Scan:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: SCA Scan
#        env: 
#          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
#        run: |
#          git version
#          curl -sSL https://download.sourceclear.com/ci.sh | sh -s -- scan --recursive > veracode-sca-results.txt
#      - name: Check for existing Vulnerabilities
#        id: check-vulnerabilities
#        run: |
#          cat veracode-sca-results.txt
#          TEMP_VULN_EXISTS=$(grep 'Risk Vulnerabilities' veracode-sca-results.txt | awk '{sums += $4} END { test = (sums>0); print test}')
#          TEMP_VULN_SUM=$(grep 'Risk Vulnerabilities' veracode-sca-results.txt | awk '{sums += $4} END { print sums}')
#          echo ::set-output name=fail::$TEMP_VULN_EXISTS
#          echo ::set-output name=sums::$TEMP_VULN_SUM
#      - name: SCA Pass
#        if: ${{ steps.check-vulnerabilities.outputs.fail == 1 }}
#        uses: actions/github-script@v3
#        env:
#          VULN_NUM: ${{ steps.check-vulnerabilities.outputs.sums }}
#        with:
#          script: |
#            console.log(process.env.VULN_NUM);
#            core.setFailed(`Found ${process.env.VULN_NUM} Risk Vulnerabilities in your open source libraries`);
name: Veracode SCA Scan
#
on: 
  push:
    paths-ignore:
      - "README.md"
  schedule:
    - cron: 15 14 * * 6

jobs:
  veracode-sca-task:
    runs-on: ubuntu-latest
    name: Scan repository for Issues

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Set up python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install pipenv
        run: |
          pip install pipenv
          pipenv install -r requirements.txt
#      - name: Install requirements
#        run: pip install -r requirements.txt
      - name: Run Veracode SCA
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        run: |
         curl -sSL https://download.sourceclear.com/ci.sh | sh -s -- scan --allow-dirty
#         curl -sSL https://download.sourceclear.com/ci.sh | sh -s -- scan --debug --skip-collectors pipenv
#        uses: Lerer/veracode-sca@v1.0.1 
#        uses: lerer/veracode-sca@fix-execSync-buffer-overflow
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          quick: true
#          create-issues: true 
#          fail-on-cvss: 1
#          min-cvss-for-issue: 1
#
